{"version":3,"sources":["Counter.js","AddCounterForm.js","App.js","index.js"],"names":["Counter","props","useState","newValue","setNewValue","name","value","type","onChange","e","target","onClick","id","stateNewValue","Number","decrement","increment","remove","AddCounterForm","setName","setValue","onSubmit","App","counters","setCounters","incrementCount","newCounters","map","el","decrementCount","removeCounter","filter","reduce","acc","key","console","log","Math","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.182a6e9c.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nfunction Counter(props) {\n\n  const [newValue, setNewValue] = useState('type new value');\n\n  const stateNewValue = (id, newValue) => {\n    props.stateNewValue(id, Number(newValue));\n    setNewValue(0);\n  };\n\n  return (\n  <div>\n    Counter name <strong>{props.name}</strong>\n    counter value <strong>{props.value}</strong>\n\n    <input type=\"text\" value={newValue} onChange={e => setNewValue(e.target.value)}/>\n    <button onClick={() => stateNewValue(props.id, newValue)}>set</button>\n\n    <button onClick={() => props.decrement(props.id)}>-</button>\n    <button onClick={() => props.increment(props.id)}>+</button>\n    <button onClick={() => props.remove(props.id)}>delete</button>\n  </div>\n  );\n}\n\nexport default Counter;\n","import React, {useState} from 'react';\nimport './App.css';\n\nfunction AddCounterForm(props) {\n\n  const [name, setName] = useState ('type name')\n  const [value, setValue] = useState ('type value');\n\n  const onSubmit = (name, value) => {\n    props.onSubmit(name, Number(value));\n    setName('');\n    setValue(0);\n  };\n\n  return (\n  <div>\n    Add new counter\n    <input type=\"text\" value={name} onChange={e => setName(e.target.value)}/>\n    <input type=\"text\" value={value} onChange={e => setValue(e.target.value)}/>\n\n    <button onClick={()=> onSubmit(name, value)}>Create</button>\n  </div>\n  );\n}\n\nexport default AddCounterForm;\n","import React, {useState} from 'react';\nimport './App.css';\nimport Counter from \"./Counter\";\nimport AddCounterForm from \"./AddCounterForm\";\n\n\nfunction App() {\n\n    const InitialCounterState = [\n        {name: 'Counter 1', value: 3, id:'123'},\n        {name: 'Counter 2', value: 1, id:'234'},\n        {name: 'Counter 3', value: 7, id:'345'},\n    ];\n\n    const [counters, setCounters] = useState(InitialCounterState);\n\n    const incrementCount = (id) => {\n        const newCounters = counters.map(el => {\n            if (el.id === id) return {...el, value: el.value + 1};\n            return el;\n        });\n        setCounters(newCounters);\n    };\n\n    const decrementCount = (id) => {\n        const newCounters = counters.map(el => {\n            if (el.id === id) return {...el, value: el.value - 1};\n            return el;\n        });\n        setCounters(newCounters);\n    };\n\n    const resetTotalCount = () => {\n        const newCounters = counters.map(el => ({...el, value: 0}) );\n        setCounters(newCounters);\n    };\n\n    const addCounter = (name, value) => {\n        console.log('fefe')\n        const newCounters = [...counters, {\n            id: Math.random(),\n            name,\n            value\n        }];\n        setCounters(newCounters);\n    };\n\n    const removeCounter = (id) => {\n        const newCounters = counters.filter(el => el.id !== id );\n        setCounters(newCounters);\n    };\n\n    const stateNewValue = (id, newValue) => {\n        const newCounters = counters.map(el => {\n            if (el.id === id) return {...el, value: newValue};\n            return el;\n        });\n        setCounters(newCounters);\n    };\n\n  return (\n      <div>\n          Total count {counters.reduce((acc,el) => acc + el.value, 0)}\n          <hr/>\n          <button onClick={resetTotalCount}>Reset total count</button>\n          <hr/>\n          {\n              counters.map(el => <Counter name={el.name}\n                                          value={el.value}\n                                          id={el.id}\n                                          key={el.id}\n                                          increment={incrementCount}\n                                          decrement={decrementCount}\n                                          remove={removeCounter}\n                                          stateNewValue={stateNewValue}\n              />)\n          }\n          <hr/>\n          <AddCounterForm onSubmit={addCounter}/>\n      </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}